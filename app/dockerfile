## Builder Stage
# Start from the golang:alpine image with the latest version of Go installed
FROM golang:alpine AS builder

WORKDIR /go/src/github.com/git-sim/tc/app
# Copy the local package files to the container's workspace
# in the above created WORKDIR
ADD . .
# Build the go-API-template command inside the container
RUN cd cmd/msgserver && go build -o msgserver 

## Final Stage
## Pull golang alpine image (very small image, with minimum needed to run Go)
FROM alpine

# Create WORKDIR
WORKDIR /app

# Copy app binary from the Builder stage image
COPY --from=builder /go/src/github.com/git-sim/tc/app/cmd/msgserver/msgerver .
# Run the userServer command by default when the container starts.
ENTRYPOINT ./msgserver
# Document that the service uses port 8080
EXPOSE 8080
# Document that the service uses port 5432
EXPOSE 5432